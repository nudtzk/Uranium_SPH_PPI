# -*- coding: utf-8 -*-
"""
Created on Wed Oct 27 15:53:26 2021
@author: Littlebox
"""

import numpy as np
import matplotlib.pyplot as plt

def Wf(x, R, h, t):
    sq = (R>= 0) * (R <= 1)
    R = R[sq]
    x = x[sq] 
    print(sum(sq))
    return np.sum(5/4/h*(1+3*R)*(1-R)**3*t(x))

def Wdf(x, R, dR, h, t):
    sq = (R>= 0) * (R <= 1)
    R = R[sq]
    dR = dR[sq]
    x = x[sq] 
    return np.sum(5/4/h*(-12*R)*(1-R)**2*dR*t(x))

def f(x):
    return np.sin(x)

def g(x):
    return x**2 - x +1

def d(x):
    return np.log(x)
    
def f_mid(x, x_min, x_max, n, h, t):
    x_ = np.linspace(x_min+np.random.random()*1e-3, x_max-np.random.random()*1e-3, n)
    R = np.sqrt((x-x_)**2)/h
    return Wf(x_, R, h, t)/n*(x_max-x_min)

def df_mid(x, x_min, x_max, n, h, t):
    x_ = np.linspace(x_min+np.random.random()*1e-3, x_max-np.random.random()*1e-3, n)
    R = np.sqrt((x-x_)**2)/h
    dR = 1/h*(x-x_)/np.sqrt((x-x_)**2)
    return Wdf(x_, R, dR, h, t)/n*(x_max-x_min)



n=1000
fc = g
x_min = 0
x_max = 1
h = (x_max-x_min)/n*20
x_end = np.linspace(x_min+0.05, x_max-0.05,100)
y = []
dy = []
for j in x_end:
    y.append(f_mid(j, x_min, x_max, n, h, fc))
    dy.append(df_mid(j, x_min, x_max, n, h, fc))

y = np.array(y)
dy = np.array(dy)
plt.plot(x_end,y,x_end,fc(x_end),x_end,dy,x_end,2*x_end-1)  
plt.show()  
